export function addingProTask(){

    const addBtn = document.getElementById('addBtn');
    const projectInput = document.getElementById('project-input');
    const projects = document.getElementById('projects');
    const title = document.getElementById('title');
    const important = document.getElementById('important')
    const subBtn = document.getElementById('subBtn');
    const tasksContainer = document.getElementById('tasksContainer');
    const allTasksBtn = document.getElementById('allTasks');
    const titleInput1 = document.getElementById('taskTitle');
    const dateInput1 = document.getElementById('taskDate');

    const addTask = document.getElementById('add-task');
    const taskForm = document.getElementById('taskForm');

    const projectList = [];

    let currentProject = null;


    function allTasks(){

         // Check if there are any tasks in all projects
    if (projectList.some(project => project.tasks.length > 0)) {
        tasksContainer.style.display = 'flex';
        showTaskList();
        hideTaskForm();
        hideAddTaskBtn();
    } else {
        alert("No tasks available. Add tasks to projects first.");
    }
    }

    function addProject(){

        const projectName = projectInput.value.trim();

        if(projectName !== ""){

            if(!checkProName(projectName)){

                const newProject = {name: projectName, tasks: [] };

                projectList.push(newProject);
    
                currentProject = newProject;
    
                projectInput.value = "";
    
                displayProjects();  
    
                projectInput.style.border = 'none';
            }else{
                alert("Project name already taken, try another");
                projectInput.style.border = '2px solid red';
            }
        
        }else{
            alert("Must input project name");
            projectInput.style.border = '2px solid red';
        }
    }


    function displayProjects() {
        projects.innerHTML = "";
    
        for (let i = 0; i < projectList.length; i++) {
            const project = projectList[i];
    
            const pTag = document.createElement('p');
            pTag.textContent = ` ${project.name}`;
    
            pTag.addEventListener("click", function () {
                displayProjectTitle(project.name);
    
                currentProject = project;
                showAddTask();
            });
    
            projects.appendChild(pTag);
        }

        subBtn.removeEventListener("click", handleAddTaskClick);
        subBtn.addEventListener("click", handleAddTaskClick);
    
    }

    function handleAddTaskClick(event) {
        event.preventDefault();
        const titleInput = document.getElementById('taskTitle').value;
        const dateInput = document.getElementById('taskDate').value;
        const important2 = document.getElementById('important').textContent;
        
        if(!titleInput && !dateInput){
            titleInput1.style.border = '2px solid red';
            dateInput1.style.border = '2px solid red';
            return;
        }else if(!titleInput){
            titleInput1.style.border = '2px solid red';
            dateInput1.style.border = '2px solid green';
            return;
        }else if(!dateInput){
            dateInput1.style.border = '2px solid red';
            titleInput1.style.border = '2px solid green';
            return;
        }
        if (currentProject) {
            const tasks = {
                taskName: titleInput,
                taskDate: dateInput,
                taskImportant: important2,
            };
    
            currentProject.tasks.push(tasks);
    
            console.log(currentProject);
            document.getElementById('taskTitle').value = "";
            document.getElementById('taskDate').value = "";
            titleInput1.style.border = '2px solid green';
            dateInput1.style.border = '2px solid green';
            hideTaskForm();

        } else {
            alert("Please select a project before adding a task.");
        }
    }
    

    function displayProjectTitle(newTitle){

        title.textContent = `${newTitle}`;
        // tasksContainer.style.display = 'none';
        hideTaskForm();
    }

    function checkButton(){

        if(important.textContent === 'Important'){

            important.style.backgroundColor = 'red';
            important.textContent = 'Not Important';
            
        }else{

            important.style.backgroundColor = 'green';
            important.textContent = 'Important';
        
        }
    }

    function showAddTask(){
        
        if(currentProject){
            addTask.style.display = 'block';
        }else{
            addTask.style.display = 'none';

        }
    }


    
    function showTaskList() {
        tasksContainer.innerHTML = ''; // Clear previous content
    
         // Create a container for each task
    for (let i = 0; i < projectList.length; i++) {
        const project = projectList[i];

        // Iterate over tasks in the project
        project.tasks.forEach((task, index) => {
            // Create a container for each task
            const taskContainer = document.createElement('div');
            taskContainer.classList.add('task-container');

            // Create divs for task information
            const infoContainer = document.createElement('div');
            infoContainer.classList.add('info-container');

            const titleDateContainer = document.createElement('div');
            titleDateContainer.textContent = `${task.taskName}       ${task.taskDate}`;
            infoContainer.appendChild(titleDateContainer);

            const buttonContainer = document.createElement('div');
            buttonContainer.classList.add('button-container');

            const importanceContainer = document.createElement('div');
            importanceContainer.textContent = `${task.taskImportant}`;
            buttonContainer.appendChild(importanceContainer);

              // Create a delete button
            const deleteButton = document.createElement('button');
            buttonContainer.appendChild(deleteButton);
            
            deleteButton.addEventListener('click', function () {
                // Call a function to delete the task from the project
                deleteTaskFromProject(i, index);
            });

            taskContainer.appendChild(infoContainer);
            taskContainer.appendChild(buttonContainer);

            tasksContainer.appendChild(taskContainer);
            
        });
    
        }
    }

    // Function to delete the task from the project
    function deleteTaskFromProject(projectIndex, taskIndex) {
        if (projectIndex >= 0 && projectIndex < projectList.length) {
            const project = projectList[projectIndex];
            if (taskIndex >= 0 && taskIndex < project.tasks.length) {
                // Remove the task from the project's tasks array
                project.tasks.splice(taskIndex, 1);
                // Update the UI to reflect the changes
                showTaskList();
            }
        }
    }

    function checkProName(name){
        for(let i = 0; i < projectList.length; i++){
            if (projectList[i].name === name){
                return true;
            }
        }
        return false;
    }

    function hideAddTaskBtn(){
        addTask.style.display = 'none';
    }

    function hideTaskForm(){
        taskForm.style.display = 'none';
    }

    displayProjects();
    showAddTask();
    addBtn.addEventListener('click', addProject);
    important.addEventListener('click', checkButton);
    allTasksBtn.addEventListener('click', allTasks);
}
